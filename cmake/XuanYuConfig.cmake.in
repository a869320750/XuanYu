@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# 查找依赖
find_dependency(PkgConfig REQUIRED)
find_dependency(Threads REQUIRED)

# 查找GmSSL
set(GMSSL_PKG_OK FALSE)
if(PKG_CONFIG_FOUND)
    pkg_check_modules(GMSSL QUIET gmssl)
    if(GMSSL_FOUND)
        set(GMSSL_PKG_OK TRUE)
    endif()
endif()

if(NOT GMSSL_PKG_OK)
    # 回退搜索
    find_path(GMSSL_INCLUDE_DIRS
        NAMES gmssl/ssl.h gmssl.h openssl/ssl.h gmssl/sm2.h
        PATHS /usr/local/include /usr/include /usr/local/opt/openssl/include
        PATH_SUFFIXES include include/gmssl
    )
    
    find_library(GMSSL_LIBRARIES
        NAMES gmssl libgmssl gmssl_static
        PATHS /usr/local/lib /usr/lib /usr/local/opt/openssl/lib
        PATH_SUFFIXES lib lib64
    )
    
    if(GMSSL_INCLUDE_DIRS AND GMSSL_LIBRARIES)
        set(GMSSL_PKG_OK TRUE)
    else()
        message(FATAL_ERROR "GmSSL not found")
    endif()
endif()

# 查找JSON库
find_dependency(nlohmann_json QUIET)
if(NOT nlohmann_json_FOUND)
    # 如果找不到，使用FetchContent下载
    include(FetchContent)
    FetchContent_Declare(json
        GIT_REPOSITORY https://github.com/nlohmann/json.git
        GIT_TAG v3.11.3
    )
    FetchContent_MakeAvailable(json)
endif()

# 包含导出的目标
include("${CMAKE_CURRENT_LIST_DIR}/XuanYuTargets.cmake")

# 设置变量供用户使用
set(XuanYu_LIBRARIES XuanYu::xuanyu)
set(XuanYu_INCLUDE_DIRS "${PACKAGE_PREFIX_DIR}/include/xuanyu")

check_required_components(XuanYu)